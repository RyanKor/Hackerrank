'''
파이썬 내장함수 min(), max(), sum() 모두 사실은 정렬(sort)를 기반으로 작동한다.
만약에 내장함수를 사용할 수 없는 상황이 닥쳤고, 정렬 알고리즘을 사용해 최소값, 최대값 또는 배열 전체 합을 구하는 상황이 닥쳤다고 가정해보자.
퀵정렬, 버블정렬, 병합정렬, 삽입정렬 등에 대한 질문을 할 수 있고, 이중에 그래도 가장 알고리즘 연산 속도가 빠른 것은
병합정렬(Merge Sort)다.
그래서 한 번 병합정렬을 이용해서 최대, 최소, 배열 내 모든 요소의 합을 구해보자.
'''
def mergeSort(x):
    if len(x) > 1:
        mid = len(x)//2 #먼저 리스트 내 중간 값을 찾자.
        lx, rx = x[:mid], x[mid:] #그리고 리스트를 지정하자. 배열의 왼쪽, 오른쪽을 탐색할 리스트다.
        mergeSort(lx) #왼쪽 값을 찾을 병합 정렬
        mergeSort(rx) #오른쪽 값을 찾을 병합정렬

        li, ri, i = 0, 0, 0 #인덱스 지정
        while li < len(lx) and ri < len(rx): #left index, right index가 모두 배열 전체 길이 값보다 작을 때만 루프가 지속된다.
            if lx[li] < rx[ri]:
                x[i] = lx[li]
                li += 1
            else:
                x[i] = rx[ri]
                ri += 1
            i += 1
        x[i:] = lx[li:] if li != len(lx) else rx[ri:]
# 병합정렬은 인터넷에 워낙 자료가 많아서 찾는 건 쉬웠는데, 이걸 어떻게 최소, 최대, 총합에 적용하는가?